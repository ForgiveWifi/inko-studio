// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Size {
  size    String    @id @unique
  index   Int
  Garment Garment[]
  Tags    Tags[]
}

model Color {
  id      String    @id @default(uuid())
  index   Int       @default(autoincrement())
  name    String    @unique
  hex     String
  dark    Boolean
  Garment Garment[]
}

model Style {
  sku          String    @id @unique
  index        Int       @default(autoincrement())
  name         String
  description  String?
  brand        String
  type         String
  front_image  String    @default("")
  back_image   String    @default("")
  width        Float
  height       Float
  front_offset Int       @default(0)
  back_offset  Int       @default(0)
  scale        Int       @default(20)
  Garment      Garment[]
}

model Garment {
  id         String    @id @default(uuid())
  style      Style     @relation(fields: [style_id], references: [sku])
  style_id   String
  color      Color     @relation(fields: [color_id], references: [id])
  color_id   String
  size       Size      @relation(fields: [size_id], references: [size])
  size_id    String
  pallet     Pallet    @relation(fields: [pallet_id], references: [id])
  pallet_id  String
  tags       Tags?     @relation(fields: [tags_id], references: [id])
  tags_id    String?
  stock      Int       @default(0)
  price      Int
  archived   Boolean   @default(false)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  product    Product[]

  @@unique([size_id, style_id, color_id])
}

model Image {
  id       String   @id @default(uuid())
  account  String
  art_file String
  art_url  String
  Design   Design[]
}

model Design {
  id            String  @id @default(uuid())
  placement     String  @default("Front Center")
  image         Image   @relation(fields: [image_id], references: [id])
  image_id      String
  thumbnail_url String
  underbase     Boolean @default(true)
  width         Float
  height        Float
  x_offset      Int     @default(0)
  y_offset      Int     @default(0)
  print         Print?  @relation(fields: [print_id], references: [id])
  print_id      String?
  tag           Tag[]
}

model Printer {
  id     String   @id @default(uuid())
  index  Int      @default(autoincrement())
  name   String
  Pallet Pallet[]
}

model Pallet {
  id         String    @id @default(uuid())
  name       String
  printer    Printer   @relation(fields: [printer_id], references: [id])
  printer_id String
  type       String
  width      Float
  height     Float
  Tags       Tags[]
  garment    Garment[]
}

model Product {
  sku        String   @id
  stripe     String
  account    String
  creator    String?
  images     String[]
  garment    Garment  @relation(fields: [garment_id], references: [id])
  garment_id String
  print      Print    @relation(fields: [print_id], references: [id])
  print_id   String
  tag        Tag?     @relation(fields: [tag_id], references: [id])
  tag_id     String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  archived   Boolean  @default(false)
}

model Tag {
  id        String    @id @default(uuid())
  name      String
  account   String
  design    Design    @relation(fields: [design_id], references: [id])
  design_id String    @unique
  tags      Tags      @relation(fields: [tags_id], references: [id])
  tags_id   String
  product   Product[]
}

model Tags {
  id        String    @id @default(uuid())
  size      Size      @relation(fields: [size_id], references: [size])
  size_id   String
  pallet    Pallet    @relation(fields: [pallet_id], references: [id])
  pallet_id String
  tag       Tag[]
  garment   Garment[]

  @@unique([size_id, pallet_id])
}

model Print {
  id          String    @id @default(uuid())
  name        String
  description String?
  account     String
  images      String[]
  product     Product[]
  design      Design[]
  width       Float
  height      Float
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
}
